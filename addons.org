#+title: Addons

Configuration for addons, additional features provided by individual packages.

#+begin_src emacs-lisp
  ;;; -*- lexical-binding: t -*-
#+end_src

* Git integration with magit & diff-hl & smerge

To manage the git repository, use builtin package ~vc~.

#+begin_src emacs-lisp
  (straight-use-package 'magit)
  (straight-use-package 'diff-hl)
  (straight-use-package 'smerge-mode)

  (autoload 'magit "magit" nil t)
  (autoload 'diff-hl-mode "diff-hl" nil t)
  (autoload 'diff-hl-dired-mode "diff-hl-dired" nil t)
  (autoload 'smerge-mode "smerge-mode" nil t)
#+end_src

Enable diff-hl in based on major modes.

#+begin_src emacs-lisp
  (add-hook 'dired-mode-hook 'diff-hl-dired-mode)
  (add-hook 'prog-mode-hook 'diff-hl-mode)
  (add-hook 'conf-mode-hook 'diff-hl-mode)
#+end_src

Enable smerge mode with =C-c t m=.

#+begin_src emacs-lisp
  (define-key toggle-map "m" 'smerge-mode)
#+end_src

* Input method with emacs-rime

~librime~ is required for this feature.

~emacs-rime~ is the frontend of rime built with emacs input method API.

#+begin_src emacs-lisp
  (straight-use-package 'rime)

  (setq default-input-method "rime")

  (with-eval-after-load "rime"
    (define-key rime-active-mode-map (kbd "TAB") 'rime-inline-ascii))
#+end_src

Disable input method in non-insert state.

#+begin_src emacs-lisp
  (setq rime-disable-predicates '(meow-normal-mode-p
                                  meow-keypad-mode-p
                                  meow-motion-mode-p
                                  meow-beacon-mode-p))
#+end_src

Auto switch to inline ascii state when after a space after a non-ascii character.

#+begin_src emacs-lisp
  (setq rime-inline-predicates '(rime-predicate-space-after-cc-p))
#+end_src

* Telegram client with Telega

~telegram-libtd~ is required for this feature.

Use Telega as Telegram client.

#+begin_src emacs-lisp
  (straight-use-package 'telega)

  (autoload 'telega "telega" nil t)

  (global-set-key (kbd "C-c a t") 'telega)

  (with-eval-after-load "telega"
    (define-key telega-msg-button-map (kbd "SPC") nil))
#+end_src

Proxy setup

#+begin_src emacs-lisp
  (when (and
         (bound-and-true-p meomacs-socks5-proxy-host)
         (bound-and-true-p meomacs-socks5-proxy-port))
    (setq telega-proxies
          `((:server ,meomacs-socks5-proxy-host :port ,meomacs-socks5-proxy-port
                     :enable t :type (:@type "proxyTypeSocks5")))))
#+end_src

* Password management with pass

Manage password with pass

Adding following to ~$HOME/.gnupg/gpg-agent.conf~.

#+begin_example
  allow-emacs-pinentry
  allow-loopback-pinentry
#+end_example

Open pass menu with =C-c a p=.

#+begin_src emacs-lisp
  (straight-use-package 'pass)
  (straight-use-package 'pinentry)

  (setq pass-username-fallback-on-filename t
        pass-show-keybindings nil)

  (autoload #'pass "pass" nil t)

  (global-set-key (kbd "C-c a p") 'pass)

  (with-eval-after-load "pass"
    (pinentry-start))
#+end_src

* Directory environment support with direnv

#+begin_src emacs-lisp
  (straight-use-package 'direnv)

  (setq direnv-always-show-summary nil)

  (define-key toggle-map "e" 'direnv-mode)

  (autoload 'direnv-mode "direnv" nil t)
#+end_src
